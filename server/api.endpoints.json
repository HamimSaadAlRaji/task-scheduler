{
  "info": {
    "name": "Task Scheduler API",
    "description": "Complete API testing collection for Task Scheduler application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        }
      },
      "response": []
    },
    {
      "name": "Get All Tasks",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "response": []
    },
    {
      "name": "Create Task",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const responseJson = pm.response.json();",
              "    pm.collectionVariables.set('taskId', responseJson._id);",
              "    pm.test('Task created successfully', function () {",
              "        pm.expect(pm.response.code).to.eql(201);",
              "    });",
              "    pm.test('Response has required fields', function () {",
              "        pm.expect(responseJson).to.have.property('title');",
              "        pm.expect(responseJson).to.have.property('_id');",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Complete Project Documentation\",\n  \"description\": \"Write comprehensive documentation for the task scheduler project\",\n  \"dueDate\": \"2024-12-31T23:59:59.000Z\",\n  \"status\": \"todo\",\n  \"priority\": \"high\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "response": []
    },
    {
      "name": "Get Task by ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        }
      },
      "response": []
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Complete Project Documentation - Updated\",\n  \"description\": \"Write comprehensive documentation for the task scheduler project with API examples\",\n  \"status\": \"in-progress\",\n  \"priority\": \"medium\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        }
      },
      "response": []
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{taskId}}"]
        }
      },
      "response": []
    },
    {
      "name": "Create Multiple Test Tasks",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Setup Development Environment\",\n  \"description\": \"Install and configure all necessary development tools\",\n  \"dueDate\": \"2024-11-30T10:00:00.000Z\",\n  \"status\": \"completed\",\n  \"priority\": \"high\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "response": []
    },
    {
      "name": "Create Task - Low Priority",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Code Review\",\n  \"description\": \"Review team member's pull request\",\n  \"dueDate\": \"2024-12-15T16:00:00.000Z\",\n  \"status\": \"todo\",\n  \"priority\": \"low\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "response": []
    },
    {
      "name": "Test Non-existent Task",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/507f1f77bcf86cd799439011",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "507f1f77bcf86cd799439011"]
        }
      },
      "response": []
    },
    {
      "name": "Test Invalid Route",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/invalid-route",
          "host": ["{{baseUrl}}"],
          "path": ["api", "invalid-route"]
        }
      },
      "response": []
    }
  ]
}